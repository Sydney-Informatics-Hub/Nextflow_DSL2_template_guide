# **Template structure**

Nextflow is highly flexible, allowing users to implement workflows in a number of different ways. In this template, we provide one common implementation for structuring your Nextflow code base in a way that is easy to maintain and read. 

The template's code repository is organised into a number of files and directories: 

```default
myWorkflow-nf
├── .github/ISSUE_TEMPLATE
├── assets
├── bin
├── config
├── modules
├── main.nf
├── LICENSE
├── README.md
└── nextflow.config
```

Consider a basic Nextflow run command below, where a user will need to specify parameters and (optionally) a configuration [profile](https://www.nextflow.io/docs/latest/config.html#config-profiles):  

![](../figs/template_command.png)

* The `main.nf` file is the executable file that identifies the workflow structure, inputs, and processes to pull form the `modules/` directory. 
* The `--parameter` flag matches a parameter initialised in the `nextflow.config` file and applies it to the workflow execution. 
* The `-profile` flag is used to specify environment-specific configuration details such as a software implementation method and/or resource management.  

Running a workflow that follows this template will output: 

* A customisable execution message invoked when the workflow is run 
* A customisable help message invoked using `--help` or failing to supply a required parameter 
* A customisable completion message invoked when the workflow has finished running 
* Files generated by your processes, optionally these can be saved to a results directory 
* Workflow execution resource usage, trace, and timeline reports  